#!/usr/bin/perl
# vim:cindent:ts=2:sw=2:et:fdm=marker:cms=\ #\ %s
# $Id: install-docs 62 2007-04-26 21:29:31Z robert $

use warnings;
use strict;
use lib 'perl';
use Debian::DocBase::Common;
use Debian::DocBase::Utils;
use Debian::DocBase::Document;
use Debian::DocBase::FilesListFile;
use Debian::DocBase::DocBaseFile;
use Debian::DocBase::Programs::Dhelp;
use Debian::DocBase::Programs::Dwww;
use Debian::DocBase::Programs::Scrollkeeper;

=head1 NAME

install-docs - manage online Debian documentation

=cut



# set umask explicitly
umask 022;

# constants
my $MODE_INSTALL    = 'install';
my $MODE_REMOVE     = 'remove';
my $MODE_REREGISTER = 'reregister';
my $MODE_STATUS     = 'status';

my $mode = undef;
my $docbasedir="/usr/share/doc-base";
my $do_dwww_update = 1;

=head1 SYNOPSIS

 install-docs [ -v | --verbose ] [ --no-update-menus ] -i | --install file [ file ... ]

 install-docs [ -v | --verbose ] [ --no-update-menus ] -r | --remove file [ file ... ]

 install-docs [ -v | --verbose ] -s | --status docid [ docid ... ]

=head1 DESCRIPTION

B<install-docs> is a tool allow Debian package maintainers to register
documentation to various documentation systems.  It currently supports
B<dhelp>,  B<dwww>, B<doc-central>, and B<scrollkeeper> browsers.

This manual page provides a quick synopsis of B<install-docs> usage.
Full documentation can be found in the documentation, including a
description of the control file syntax and grammar.

=head1 OPTIONS

=over 4

=cut
while (my $arg = shift @ARGV) {

  if (($arg eq '-v') or ($arg eq '--verbose')) {

=item B<-v> | B<--verbose>

Operate verbosely.

=cut
    $verbose = 1;
    next;
  }

  if ($arg eq '--no-update-menus') {

=item B<--no-update-menus>

Inhibit running both L<update-menus(1)> (used for the L<dwww(8)> update program)
and L<scrollkeeper-update(8)>.

=cut
    $do_dwww_update = 0;
    next;
  }

  if (($arg eq '-i') or ($arg eq '--install')) {

=item B<-i> | B<--install> I<file> [ I<file ...> ]

Install the documentation described by the control file I<file>.

=cut
    # install new docs 
    &SetMode($MODE_INSTALL);
    last;

  } elsif (($arg eq '-r') or ($arg eq '--remove')) {

=item B<-r> | B<--remove> I<file> [ I<file ...> ]

Remove the documentation identified by the document identifier
I<docid>.  Document identifiers are tags which are set in the control
file, and usually correspond to the package name.

=cut
    # remove old docs # {{{
    &SetMode($MODE_REMOVE);
    last;

     exit 0; # }}}

  } elsif (($arg eq '-s') or ($arg eq '--status')) {

=item B<-s> | B<--status> I<docid> [ I<docid ...> ]

Display the status of the document identifier I<docid>.

=cut
    &SetMode($MODE_STATUS);
    last;

  } elsif (($arg eq '-L') or ($arg eq '--listfiles')) {

=item B<-L> | B<--listfiles> I<docid> [ I<docid ...> ]

Deprecated option. Does nothing.

=back

=cut
    warn "Ignoring deprecated command line argument: $arg\n";
    exit 0;

  } else {
    die "Invalid command line argument: $arg\n";
  }
}




=head1 BUGS

See <URL:http://bugs.debian.org/doc-base>.

=head1 SEE ALSO

dwww(8), scrollkeeper(7), Debian doc-base Manual
F</usr/share/doc/doc-base/doc-base.html/index.html>, dhelp Manual
F</usr/share/doc/dhelp/dhelp.html>

=head1 AUTHOR

This program was originally written by Christian Schwarz
<schwarz@debian.org>, for the Debian GNU/Linux system, and the
next maintainer was Adam Di Carlo <aph@debian.org>.
Robert Luberda <robert@debian.org> is currently maintaining and extending it.

This software was meant to be for the benefit of the entire Debian
user and developer community.  If you are interested in being involved
with this software, please join the mailing list
<debian-doc@lists.debian.org>.

=cut




sub SetMode($) { # {{{
  my $newmode = shift;

  die "Conflicting modes: $mode != $newmode\n" if (defined $mode and $mode ne $newmode);

  $mode = $newmode;
  ($#ARGV == -1) and die "Arguments missing for `$mode'\n";
} # }}}



sub GetArguments() { # {{{

  my @args = ();

  return @args if ($#ARGV < 0);

  if ($#ARGV == 0 and $ARGV[0] eq '-') {
    # get list from stdin
    @args = <STDIN>;
  }  
  else {
    @args = @ARGV;
  }

  my $i = $#args;
  while ($i >= 0) {
    my $f = $args[$i];
    $f = "$docbasedir/$f" if $f !~ /\//;
    if (not -f $f) {
        warn "Ignoring nonexistent file $f\n";
        splice (@args, $i, 1);
    } else {
      $args[$i] = $f;
    }   
    $i--;  
  } 
  return @args;
} # }}}



### MAIN  # {{{

my @documents = ();

  die("Needs mode\n") unless defined $mode;

  if ($mode eq $MODE_INSTALL or $mode eq $MODE_REMOVE or $mode eq $MODE_REREGISTER) {
    my @args = &GetArguments();
    foreach my $file (@args) {
      my $docfile = Debian::DocBase::DocBaseFile->new($file);
      my $docid   = $docfile->document_id();
      my $doc     = Debian::DocBase::Document->new($docid);

      $doc->unregister($docfile) if ($mode eq $MODE_REMOVE or $mode eq $MODE_REREGISTER);
      $doc->register($docfile)   if ($mode eq $MODE_INSTALL or $mode eq $MODE_REREGISTER);
      push (@documents, $doc);
    }      
  }

  if ($mode eq $MODE_STATUS) {
    my @args = &GetArguments();
    foreach my $docid (@args) {
      my $doc     = Debian::DocBase::Document->new($docid);
      $doc->display_status_information();
      push (@documents, $doc);
    }
  }
    

  if ($mode eq $MODE_INSTALL or $mode eq $MODE_REMOVE or $mode eq $MODE_REREGISTER)  {
    &RegisterDhelp(@documents);
    &RegisterScrollkeeper(@documents);
    &RegisterDwww(@documents) if $do_dwww_update ;
  }   

  exit 0; 
# }}}
