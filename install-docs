#!/usr/bin/perl
# vim:cindent:ts=2:sw=2:et:fdm=marker:cms=\ #\ %s

use warnings;
use strict;
use lib 'perl';
use Debian::DocBase::Common;
use Debian::DocBase::Utils;
use Debian::DocBase::Document;
use Debian::DocBase::FilesListFile;
use Debian::DocBase::DocBaseFile;
use Debian::DocBase::Programs::Dhelp;
use Debian::DocBase::Programs::Dwww;
use Debian::DocBase::Programs::Scrollkeeper;

=head1 NAME

install-docs - manage online Debian documentation

=cut



# set umask explicitly
umask 022;

=head1 SYNOPSIS

 install-docs [ -v, --verbose ]
              [ --no-update-menus ]
              -i --install | 
              -r --remove  |
              -s --status  |
              -L --listfiles
                <doc-id | file>

=head1 DESCRIPTION

B<install-docs> is a tool allow Debian package maintainers to register
documentation to various documentation systems.  It currently supports
B<dhelp>,  B<dwww>, B<doc-central>, and B<scrollkeeper> browsers.

This manual page provides a quick synopsis of B<install-docs> usage.
Full documentation can be found in the documentation, including a
description of the control file syntax and grammar.

=head1 OPTIONS

=over 4

=cut
my $doc= undef;
my $docid = undef;
my $arg;
while ($arg = shift) {

  if (($arg eq '-v') or ($arg eq '--verbose')) {

=item B<-v> | B<--verbose>

Operate verbosely.

=cut
    $verbose = 1;
    next;
  }

  if ($arg eq '--no-update-menus') {

=item B<--no-update-menus>

Inhibit running both L<update-menus(1)> (used for the L<dwww(8)> update program)
and L<scrollkeeper-update(8)>.

=cut
    $do_dwww_update = 0;
    next;
  }

  if (($arg eq '-i') or ($arg eq '--install')) {

=item B<-i> I<file> | B<--install> I<file>

Install the documentation described by the control file I<file>.

=cut
    # install new docs # {{{
    (my $file = shift) or die "argument missing for `install'\n";
    ($#ARGV == -1) or warn ("ignoring additional arguments for `install'\n");
    ($file eq "-") and warn("ignoring invalid argument for `install'\n") and exit (0);
    $warn_nonexistent_files = 1;

    my $docfile = Debian::DocBase::DocBaseFile->new($file);
    $docid = $docfile->document_id();
    $doc = Debian::DocBase::Document->new($docid);
    $doc->register($docfile);


    # register documents to subsystems
    register_dhelp($doc);
    register_dwww($doc);
    register_scrollkeeper($doc);

    $doc->write_status();

    exit(0); # }}}

  } elsif (($arg eq '-r') or ($arg eq '--remove')) {

=item B<-r> I<docid> | B<--remove> I<docid>

Remove the documentation identified by the document identifier
I<docid>.  Document identifiers are tags which are set in the control
file, and usually correspond to the package name.

=cut
    # remove old docs # {{{
    (my $file = shift) or die "argument missing for `remove'\n";
    ($#ARGV == -1) or warn ("ignoring additional arguments for `remove'\n");
    ($file eq "-") and warn("ignoring invalid argument for `remove'\n") and exit (0);

    $file = "/usr/share/doc-base/$file" unless $file =~ /\//;

    my $docfile = Debian::DocBase::DocBaseFile->new($file);
    $docid = $docfile->document_id();
    $doc = Debian::DocBase::Document->new($docid);
    $doc->unregister($docfile);

##    if ( ! read_status_file(1) ) {
##      warn("Document `$docid' is not installed, cannot remove.\n");
##      exit 0;
##    }
##    read_control_file($status{'Control-File'});
##    read_list_file();
##
##    # remove newly created files and unregister from menus
##    remove_files();
##    remove_omf_files() if $status{'Scrollkeeper-omf-file'};
##    update_dwww_menus() if $status{'Registered-to-dwww'};
##    update_scrollkeeper() if $status{'Registered-to-scrollkeeper'};
##
##    # remove data files
##    remove_data_files(); 
    
    $doc->write_status();

   exit 0; # }}}

  } elsif (($arg eq '-s') or ($arg eq '--status')) {

=item B<-s> I<docid> | B<--status> I<docid>

Display the status of the document identifier I<docid>.

=cut
    # display status # {{{
    ($docid = shift) or die "argument missing for `status'\n";
    ($#ARGV == -1) or die "too many arguments for `status'\n";

    my $doc = Debian::DocBase::Document->new($docid);
    $doc->display_status_information();
    exit 0;

#    read_status_file();
#    read_list_file();
#    read_control_file($status{'Control-File'});
#
#    display_status_information(); # }}}

  } elsif (($arg eq '-L') or ($arg eq '--listfiles')) {

=item B<-L> I<docid> | B<--listfiles> I<docid>

List the files associated with the document identifier I<docid>.

=back

=cut
    # display file listning # {{{
    ($docid = shift) or die "argument missing for `listfiles'\n";
    ($#ARGV == -1) or die "too many arguments for `listfiles'\n";
    die ("unimplemented");

##    read_status_file();
##    read_list_file();
##
##    display_listing(); # }}}
##
  } else {
    die "invalid command line argument: $arg\n";
  }
}

exit 0;

=head1 BUGS

None known, but a much more robust system is being planned as the next
generation of doc-base.

=head1 SEE ALSO

dwww(8), scrollkeeper(7), Debian doc-base Manual
F</usr/share/doc/doc-base/doc-base.html/index.html>, dhelp Manual
F</usr/share/doc/dhelp/dhelp.html>

=head1 AUTHOR

This program was originally written by Christian Schwarz
<schwarz@debian.org>, for the Debian GNU/Linux system, and the
next maintainer was Adam Di Carlo <aph@debian.org>.
Robert Luberda <robert@debian.org> is currently maintaining and extending it.

This software was meant to be for the benefit of the entire Debian
user and developer community.  If you are interested in being involved
with this software, please join the mailing list
<debian-doc@lists.debian.org>.

=cut

#Local Variables:
#perl-indent-level:2
#End:
