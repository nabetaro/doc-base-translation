<!DOCTYPE debiandoc PUBLIC "-//DebianDoc//DTD DebianDoc//EN"[
  <!-- include version information so we don't have to hard-code it
       within the document -->
  <!ENTITY % versiondata SYSTEM "version.ent"> %versiondata;
]>
<book>

<title>Debian <package>doc-base</package> Manual
<author>Christian Schwarz <email/schwarz@debian.org/
<author>Adam Di Carlo <email/aph@debian.org/
<author>Robert Luberda <email/robert@debian.org/
<version>ver. &version;, &date;

<abstract>
This manual describes what <package>doc-base</package> is and how it
can be used to manage online manuals on Debian systems.
</abstract>

<copyright>
	<copyrightsummary>
copyright &copy;1998, Christian Schwarz</copyrightsummary>
	<copyrightsummary>
copyright &copy;1999 &ndash 2002, Adam Di Carlo</copyrightsummary>
	<copyrightsummary>
copyright &copy;2006 &ndash 2007, Robert Luberda</copyrightsummary>

<p>

This manual is free software; you may redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.
<p>

This is distributed in the hope that it will be useful, but
<em>without any warranty</em>; without even the implied warranty of
merchantability or fitness for a particular purpose.  See the GNU
General Public License for more details.
<p>

A copy of the GNU General Public License is available as
<tt>/usr/share/common-licenses/GPL</tt> in the Debian GNU/Linux
distribution or on the World Wide Web at the <url
id="http://www.gnu.org/copyleft/gpl.html" name="GNU website">. You can
also obtain it by writing to the Free Software Foundation, Inc.,
51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA 
      </copyright>

<toc detail="sect2">

<chapt id="about">About <package>doc-base</package>
<p>

Some time ago, there was a big discussion on the Debian mailing lists
about the preferred documentation format in Debian. The discussion
showed clearly that people have very different opinions on that topic
and thus, we'll have to implement a flexible solution.

<p>

The <package>doc-base</package> package tries to implement such a flexible solution:
Every Debian package that provides online documentation (other than
manual pages) will register these documents to
<package>doc-base</package> via the <prgn/install-docs/ script (see
<ref id="registering_documents">) at installation time and de-register the manuals again when the
package is removed.

<p>

With this registration process, <package>doc-base</package>
will be provided with details about the installed manuals, file names,
documentation formats, etc. Based on the <package>doc-base</package> configuration which
can be easily adjusted by the local system administrator, <package>doc-base</package> will
eventually convert between different documentation formats (where
available, for example, texinfo source to GNU info or PostScript),
optionally compress or remove HTML manuals which are also available in
GNU info format, etc. etc.

<p>

Since all manuals will eventually be registered,
<package>doc-base</package> can also be used to solve another
outstanding problem: Debian currently has three different online
documentation systems, <package>doc-central</package>, <package>dwww</package> and
<package>dhelp</package>. Each system has advantages and
disadvantages, thus <package/doc-base/ supports all of them.
The system administrator can choose which implementation he/she prefers.

<p>

In summary, <package>doc-base</package>'s main functionality is:

<list compact>
	  <item>
convert online manuals between different documentation formats
(depending on its configuration), and
	  <item>
register online manuals to Debian's online help systems.
</list>

Only the second part has been implemented so far.
<p>

<chapt id="interface">The packages interface
<p>

<sect>Introduction
<p>

Each Debian package that installs online manuals (in any format) should
register its manuals to <package>doc-base</package>. This is done by installing a
<package>doc-base</package> <em/control file/ (see <ref id="control_files">) 
and calling <prgn/install-docs/ from the <prgn/postinst/ script (see <ref id="registering_documents">).
<p>

<sect id="document_ids">Document IDs
<p>

Each document that is registered to <package>doc-base</package> must
have a unique <em/document ID/.
<p>

The document ID is usually taken from the document's title or from the
package name. Here are a few examples:
<p>

<example>
DOCID                  Title
---------------------- ----------------------------
debian-policy          Debian Policy Manual
developers-reference   Debian Developers Reference
doc-base               Debian doc-base Manual
emacs-manual           GNU Emacs Manual
</example>
<p>

Legal characters for the document ID are lower case
letters (a-z), digits (0-9), plus (+) or minus (-) signs, and dots
(.) (the same characters allowed in package names).
<p>

<sect id="control_files">Control Files
<p>

For each piece online documentation, <package>doc-base</package> needs a <em/control
file/ that describes the documentation and the documentation file
formats that are provided initially.
<p>
<sect1>Example
<p>
Here is an example of a <em/control file/:
<p>

<example>
Document: doc-base
Title: Debian doc-base Manual
Author: Christian Schwarz
Abstract: This manual describes what doc-base is
 and how it can be used to
 manage online manuals on Debian systems.
Section: Apps/Programming

Format: DebianDoc-SGML
Files: /usr/share/doc/doc-base/doc-base.sgml.gz

Format: Text
Files: /usr/share/doc/doc-base/doc-base.txt.gz

Format: HTML
Index: /usr/share/doc/doc-base/doc-base.html/index.html
Files: /usr/share/doc/doc-base/doc-base.html/*.html
</example>

<p>
If the <package/doc-base/ package provided necessary files in other formats, it would be possible 
to add  more sections at the end of the <em/control file/:
<example>

Format: PDF
Files: /usr/share/doc-base/doc-base.pdf

Format: PostScript
Files: /usr/share/doc-base/doc-base.ps.gz

Format: DVI
Files: /usr/share/doc-base/doc-base.dvi.gz

Format: Info
Index: /usr/share/info/doc-base.info.gz
Files: /usr/share/info/doc-base.info*.gz
</example>
</sect1>

<sect1>Syntax of the control file
<p>
As you can see from the above example, the syntax -- as is the whole
design of <package>doc-base</package> -- is heavily influenced by dpkg. This is important
since every maintainer will have to work with <package>doc-base</package> and thus, it
should be simple to remember the basic ideas.
<p>

The syntax of the control file is simple: 
<list compact>
  <item>The file consist of
     <list compact>
      <item>exactly one main section providing base information about the registered manual
        (see <ref id="main_section"> below);</item>
      <item>one or more format sections (see <ref id="format_sections">) containing pointers 
           to the registered documentation files.</item>
    </list>
  </item> 
  <item>Successive sections must be separated with empty lines.</item>
  <item>Non-empty lines use a `<tt/field-name: value/' syntax.</item>
  <item>The field names are case-insensitive.</item>
  <item>The field values are case-sensitive (except for the <em/Format/ field).</item>
  <item>Field values may be wrapped over several lines by making the first character of
        subsequent lines a space.
   <list compact> 	
    <item>If a multi-line value should contain an empty line,
          a single dot (.) must be placed in the second column. 
    <item>If the <em/Abstract/ field value should contain lines displayed verbatim,       
          the lines must begin with two spaces.
  </list>
 </item> 
</list>  

<sect2 id="main_section">The main section
<p>
The first section of the control file describes the document.  The
following fields are available:<taglist>
            <tag><em>Document</em></tag>
            <item>
              <p>
<qref id="document_ids">Document ID</qref>, required field; should be the first field.</p>
            </item>
            <tag><em>Title</em></tag>
            <item>
              <p>
Title of the document; required field.</p>
            </item>
            <tag><em>Abstract</em></tag>
            <item>
              <p>
Short paragraph giving an overview of the document; optional but
recommended field.</p>
            </item>
            <tag><em>Section</em></tag>
            <item>
              <p>
Section where the document belongs; this should follow the sections
outlined in <url id="http://www.debian.org/doc/packaging-manuals/menu-policy/ch2.html#s2.1"
name="The Debian Menu sub-policy">.  Required field.</p>


            </item>
          </taglist>
</sect2>
<sect2 id="format_sections"><em/Format/ sections
<p>
The next sections describe the different formats for the provided
document which is described in the first section.  The following
fields are available:<taglist>
            <tag><em>Format</em></tag>
            <item>
              <p>
Format for the document.  Required field.  The following formats
are recognised:
<list compact>
  <item><tt/HTML/,</item>
  <item><tt/Text/,</item>
  <item><tt/PDF/,</item>
  <item><tt/PostScript/,</item>
  <item><tt/Info/,</item>
  <item><tt/DVI/,</item>
  <item>and <tt/DebianDoc-SGML/.</item>  
</list>
The values of this field are case-insensitive (e.g. both <tt/Text/ and <tt/text/ are valid).
</p>
            </item>
            <tag><em>Index</em></tag>
            <item>
              <p>
Index or top-level file for this document format.  Only applies to
document formats <tt/HTML/ and <tt/Info/, and required if the format is <tt/HTML/ or <tt/Info/.
<p>
This field has to contain the absolute file name of the main page of the
document. This file will be specified as the front page link when the
document is registered.
            </item>
            <tag><em>Files</em></tag>
            <item>
              <p>
Space separated list of filenames or POSIX shell globs (i.e. <tt/*/, <tt/?/, and <tt/[]/ meta-characters)
representing the files which constitute the
documentation in this format.  Required field.
            </item>
          </taglist>

<p>
There must be at least one such a section. If there are more, each of them must register 
files in different formats (e.g. having two <tt/Format: HTML/ sections in one <em/control
file/ is not allowed).

<p>
Except for the <tt/Info/ format the files referred in both <em/Index/ and <em/Files/
fields should be placed somewhere under the <file>/usr/share/doc</file> hierarchy.
If for some reason it's not possible, then the registering package should provide a symbolic 
link pointing from the above hierarchy to the real files and register its documentation
through the link, allowing <package/doc-base/, <package/dhelp/, or <package/dwww/ packages
to actually handle the documentation.

Of course, files in the <tt/Info/ format should be located in the <file>/usr/share/info</file> 
directory.



</sect2>
</sect1>
</sect>

<sect id="registering_documents">Registering Documents Using <prgn>install-docs</prgn>
<p>

In order to register a piece of online documentation to
<package>doc-base</package>, the package must install the control
file (see <ref id="control_files">) as file
<file>/usr/share/doc-base/<var/document-id/</file>.
<p>

Then, it should call <prgn/install-docs/ from its <file>postinst</file> script:

<example>
  if [ "$1" = configure ]; then
    if which install-docs >/dev/null 2>&1; then
      install-docs -i /usr/share/doc-base/&lt;document-id&gt;
    fi
  fi
</example>

and from the <file>prerm</file> script as well:

<example>
  if [ "$1" = remove ] || [ "$1" = upgrade ]; then
    if which install-docs >/dev/null 2>&1; then
      install-docs -r &lt;document-id&gt;
    fi
  fi
</example>

<p>
With that, <package>doc-base</package> will automatically register the
online manuals to <package>dwww</package> and <package>dhelp</package>
when the package is installed, and de-register the manuals when the
package is removed.

<p>
Note that the call to remove the registered documentation from the
<file>prerm</file> maintainer script is necessary for cases such as
when the documentation directory changes and you want to avoid
messages such as

<example>
dpkg: warning - unable to delete old file `<var>directory</var>': Directory not empty
</example>




<chapt id="informations">Getting information about installed documents
<p>

If you want to get information about the status of an installed
manual, you can use the `<tt/-s/' or `<tt/--status/' option of
<prgn/install-docs/ followed by the document id:

<example>
$ install-docs -s foo
---document-information---
Document: foo
Abstract: This manual is about foos, bars, and Debian.
Author: Wile E. Coyote
Section: debian
Title: Debian Foo's Manual

---format-description---
Format: debiandoc-sgml
Files: /usr/share/doc/foo/sgml/foo.sgml.gz

---format-description---
Format: html
Files: /usr/share/doc/foo/html-sgml/*.html
Index: /usr/share/doc/foo/html-sgml/index.html

---status-information---
Control-File: /usr/share/doc-base/foo
Registered-to-dhelp: 1
Registered-to-dwww: 1
</example>
<p>

In some cases, <package>doc-base</package> creates files when
installing a document. For example, when a document is registered to
dhelp a file `<tt/.dhelp/' is generated. You can check out which files
have been created by <package>doc-base</package> with the `<tt/-L/' or
`<tt/--listfiles/' options followed by the document ID. Here is an
example:

<example>
$ install-docs -L foo
/usr/share/doc/foo/html-sgml/.dhelp
</example>
<p>

<chapt id="todo">TODO List

<p> The following items are listed, in order of approximate priority, as to-do
items.  Our first priority is to define the core issues of the 
Debian Documentation System, which will have status as a Sub-Policy.

<list>
  <item> Internationalisation and po-debconf support. Unfortunately this 
         would require merging <em/Abstract/ and <em/Title/ fields.
        See <url id="http://bugs.debian.org/171373" name="Bug#171363">,
             <url id="http://bugs.debian.org/171375" name="Bug#171375">,
        and <url id="http://bugs.debian.org/171378" name="Bug#171378">.

  <item>Redesigning sections hierarchy, see
      <url id="http://bugs.debian.org/109431" name="Bug#109431">.

  <item>Add some new fields, like <em/Package/ 
   (<url id="http://bugs.debian.org/71955" name="Bug#71955">),
   or <em/SortSkip/ 
   (<url id="http://bugs.debian.org/187590" name="Bug#187590">).

  <item>Merge the scrollkeeper support from the Ubuntu version of <package/doc-base/.

  <item> Policy: document the <package>doc-base</package> document registration file
  format separately (or SUBDOC it) as a proposed Debian documentation
  system policy.  

  <item> Policy: define a first-cut standard as the document
  hierarchy. 

  <item> Documentation update: show clean and minimal use of
  <prgn>install-docs</prgn> from maintainer script.

  <item> It is <em>extremely</em> difficult to deal coherently with a
  misnamed control file, or a mismatch between a control file and the
  document field.  This hit me in the transition between <package>doc-base</package> 0.4
  to 0.5 (in 0.4 I had added, in a file install-docs-man, a document
  ID named install-doc-man).  Something needs to be done about that.

  <item> Determine a cleaner way to manage the various little files
  such as <file>.dhelp</file> and <package>doc-base</package> status
  files.  This also involves behaviour on remove or purge of the
  <package>doc-base</package> packages.  I believe derived files such
  as <file>.dhelp</file> will eventually go away, since packages
  should understand the <package>doc-base</package> document
  registration control file format directly.



  
  <item> Automated format conversion, including user preferences.

</list>

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-declaration:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
